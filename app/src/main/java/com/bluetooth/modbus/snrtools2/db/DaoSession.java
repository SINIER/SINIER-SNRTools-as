package com.bluetooth.modbus.snrtools2.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bluetooth.modbus.snrtools2.db.OfflineString;
import com.bluetooth.modbus.snrtools2.db.Cmd;
import com.bluetooth.modbus.snrtools2.db.ParamGroup;
import com.bluetooth.modbus.snrtools2.db.Param;
import com.bluetooth.modbus.snrtools2.db.Var;

import com.bluetooth.modbus.snrtools2.db.OfflineStringDao;
import com.bluetooth.modbus.snrtools2.db.CmdDao;
import com.bluetooth.modbus.snrtools2.db.ParamGroupDao;
import com.bluetooth.modbus.snrtools2.db.ParamDao;
import com.bluetooth.modbus.snrtools2.db.VarDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig offlineStringDaoConfig;
    private final DaoConfig cmdDaoConfig;
    private final DaoConfig paramGroupDaoConfig;
    private final DaoConfig paramDaoConfig;
    private final DaoConfig varDaoConfig;

    private final OfflineStringDao offlineStringDao;
    private final CmdDao cmdDao;
    private final ParamGroupDao paramGroupDao;
    private final ParamDao paramDao;
    private final VarDao varDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        offlineStringDaoConfig = daoConfigMap.get(OfflineStringDao.class).clone();
        offlineStringDaoConfig.initIdentityScope(type);

        cmdDaoConfig = daoConfigMap.get(CmdDao.class).clone();
        cmdDaoConfig.initIdentityScope(type);

        paramGroupDaoConfig = daoConfigMap.get(ParamGroupDao.class).clone();
        paramGroupDaoConfig.initIdentityScope(type);

        paramDaoConfig = daoConfigMap.get(ParamDao.class).clone();
        paramDaoConfig.initIdentityScope(type);

        varDaoConfig = daoConfigMap.get(VarDao.class).clone();
        varDaoConfig.initIdentityScope(type);

        offlineStringDao = new OfflineStringDao(offlineStringDaoConfig, this);
        cmdDao = new CmdDao(cmdDaoConfig, this);
        paramGroupDao = new ParamGroupDao(paramGroupDaoConfig, this);
        paramDao = new ParamDao(paramDaoConfig, this);
        varDao = new VarDao(varDaoConfig, this);

        registerDao(OfflineString.class, offlineStringDao);
        registerDao(Cmd.class, cmdDao);
        registerDao(ParamGroup.class, paramGroupDao);
        registerDao(Param.class, paramDao);
        registerDao(Var.class, varDao);
    }
    
    public void clear() {
        offlineStringDaoConfig.clearIdentityScope();
        cmdDaoConfig.clearIdentityScope();
        paramGroupDaoConfig.clearIdentityScope();
        paramDaoConfig.clearIdentityScope();
        varDaoConfig.clearIdentityScope();
    }

    public OfflineStringDao getOfflineStringDao() {
        return offlineStringDao;
    }

    public CmdDao getCmdDao() {
        return cmdDao;
    }

    public ParamGroupDao getParamGroupDao() {
        return paramGroupDao;
    }

    public ParamDao getParamDao() {
        return paramDao;
    }

    public VarDao getVarDao() {
        return varDao;
    }

}
